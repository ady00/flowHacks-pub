generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model notes {
  note            String?  @db.VarChar
  tags            String[] @db.VarChar
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  createdBy       String   @db.VarChar
  id              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  noteDescription String?  @db.VarChar
  noteHeading     String?  @db.VarChar
  isPublic        Boolean  @default(false)
  publicId        String?  @unique @db.VarChar
  emoji           String?  @db.VarChar
  inTrash         Boolean? @default(false)
}

model stickyNotes {
  stickyNote String?  @db.VarChar
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime @default(now()) @db.Timestamptz(6)
  createdBy  String   @db.VarChar
  color      String   @default("blue") @db.VarChar
  updatedAt  DateTime @default(now()) @updatedAt @db.Timestamptz(6)
}

model whiteboards {
  id               String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  boardUrl         String   @db.VarChar
  createdBy        String   @db.VarChar
  tags             String[] @db.VarChar
  createdAt        DateTime @default(now()) @db.Timestamptz(6)
  inTrash          Boolean  @default(false)
  boardName        String?  @db.VarChar
  boardDescription String?  @db.VarChar
}

model todos {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  todo       String?   @db.VarChar
  priority   Int?      @default(0)
  todolistId String    @db.Uuid
  isDone     Boolean   @default(false)
  todolist   todolists @relation(fields: [todolistId], references: [id])
}

model todolists {
  id                  String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  todolistName        String   @db.VarChar
  todolistDescription String   @db.VarChar
  createdBy           String   @db.VarChar
  createdAt           DateTime @default(now()) @db.Timestamptz(6)
  inTrash             Boolean  @default(false)
  updatedAt           DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  todos               todos[]
}

model CodePlayground {
  id             String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdBy      String?  @db.VarChar
  playgroundName String?  @db.VarChar
  html           String?  @db.VarChar
  css            String?  @db.VarChar
  js             String?  @db.VarChar
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  isPublic       Boolean  @default(false)
  publicId       String   @unique @db.VarChar
  tags           String[] @db.VarChar
  inTrash        Boolean  @default(false)
}

model PomorodoTimer {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  userId    String   @unique @db.VarChar
  points    Int      @db.SmallInt
}
